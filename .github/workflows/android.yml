name: Android Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: $HOME/android-sdk
      ANDROID_HOME: $HOME/android-sdk

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17

    - name: Install Android SDK Command-line Tools
      run: |
        set -e
        echo "Installing Android cmdline-tools..."
        mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
        curl -sLo /tmp/cmdtools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
        unzip -q /tmp/cmdtools.zip -d /tmp
        # Move the entire cmdline-tools folder to latest/
        mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
        mv /tmp/cmdline-tools/* "$ANDROID_SDK_ROOT/cmdline-tools/latest/"
        yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses
        yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" "platform-tools" "platforms;android-34" "build-tools;34.0.0"

    - name: Create local.properties
      working-directory: NDA-CALCULATOR
      run: echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties

    - name: Make gradlew executable
      run: chmod +x ./NDA-CALCULATOR/gradlew

    - name: Show tool versions
      working-directory: NDA-CALCULATOR
      run: |
        java -version
        ./gradlew --version

    - name: Install Gradle 7.6.3
      run: |
        wget -q https://services.gradle.org/distributions/gradle-7.6.3-bin.zip
        unzip -q gradle-7.6.3-bin.zip -d $HOME/gradle
        echo "$HOME/gradle/gradle-7.6.3/bin" >> $GITHUB_PATH

    - name: Build APK
      working-directory: NDA-CALCULATOR
      env:
        ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        ANDROID_HOME: ${{ env.ANDROID_SDK_ROOT }}
      run: ./gradlew clean :app:assembleDebug --no-daemon --stacktrace --info --warning-mode all

    - name: Copy debug APK to canonical path (compat)
      run: |
        set -e
        found=$(ls -1 NDA-CALCULATOR/app/build/outputs/apk/debug/*.apk 2>/dev/null | grep -E 'app-debug.*\.apk$' | head -n 1 || true)
        if [ -z "$found" ]; then
          found=$(ls -1 NDA-CALCULATOR/app/build/outputs/apk/debug/*.apk 2>/dev/null | head -n 1 || true)
        fi
        if [ -n "$found" ]; then
          if [ "$found" != "NDA-CALCULATOR/app/build/outputs/apk/debug/app-debug.apk" ]; then
            echo "Copying $found to NDA-CALCULATOR/app/build/outputs/apk/debug/app-debug.apk"
            cp "$found" NDA-CALCULATOR/app/build/outputs/apk/debug/app-debug.apk
          else
            echo "Canonical app-debug.apk already present"
          fi
        else
          echo "No debug APK found to copy"
        fi

    - name: List build output files
      run: |
        echo "Listing APK/AAB outputs:"
        find NDA-CALCULATOR/app/build/outputs -type f -maxdepth 8 -print || echo "Build outputs folder not found"

    - name: Upload APK and AAB artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-build-artifacts
        path: |
          NDA-CALCULATOR/app/build/outputs/**/*.apk
          NDA-CALCULATOR/app/build/outputs/**/*.aab
        if-no-files-found: warn
