name: Android Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17

    - name: Install Android SDK components
      run: |
        sdkmanager --version || true
        yes | sdkmanager --licenses
        yes | sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

    - name: Accept Android SDK licenses (redundant safety)
      run: yes | sdkmanager --licenses

    - name: Create local.properties
      working-directory: NDA-CALCULATOR
      run: echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties

    - name: Make gradlew executable
      run: chmod +x ./NDA-CALCULATOR/gradlew

    - name: Show tool versions
      working-directory: NDA-CALCULATOR
      run: |
        java -version
        ./gradlew --version

    - name: Build APK
      working-directory: NDA-CALCULATOR
      env:
        ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        ANDROID_HOME: ${{ env.ANDROID_SDK_ROOT }}
      run: ./gradlew clean assembleDebug bundleDebug --no-daemon --stacktrace --info --warning-mode all

    - name: Copy debug APK to canonical path (compat)
      run: |
        set -e
        # Prefer unsigned or regular debug APK if present
        found=$(ls -1 NDA-CALCULATOR/app/build/outputs/apk/debug/*.apk 2>/dev/null | grep -E 'app-debug.*\.apk$' | head -n 1 || true)
        if [ -z "$found" ]; then
          found=$(ls -1 NDA-CALCULATOR/app/build/outputs/apk/debug/*.apk 2>/dev/null | head -n 1 || true)
        fi
        if [ -n "$found" ]; then
          if [ "$found" != "NDA-CALCULATOR/app/build/outputs/apk/debug/app-debug.apk" ]; then
            echo "Copying $found to NDA-CALCULATOR/app/build/outputs/apk/debug/app-debug.apk"
            cp "$found" NDA-CALCULATOR/app/build/outputs/apk/debug/app-debug.apk
          else
            echo "Canonical app-debug.apk already present"
          fi
        else
          echo "No debug APK found to copy"
        fi

    - name: List build output files
      run: |
        echo "Listing APK/AAB outputs:"
        find NDA-CALCULATOR/app/build/outputs -type f -maxdepth 8 -printf "%p\n" || echo "Build outputs folder not found"

    - name: Upload APK artifact(s)
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-artifacts
        path: |
          NDA-CALCULATOR/app/build/outputs/**/*.apk
          NDA-CALCULATOR/app/build/outputs/**/*.aab
        if-no-files-found: warn









